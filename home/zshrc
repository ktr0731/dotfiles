#
# autoload
#
autoload -Uz colors
autoload -Uz compinit
autoload -Uz promptinit
autoload -Uz vcs_info
colors
compinit
promptinit
vcs_info

#
# completion
#
autoload -Uz compinit
compinit

#
# options
#
setopt share_history
setopt histignorealldups
setopt auto_cd
setopt prompt_subst

#
# Functions
#

hascmd() {
  [[ -x $(which "$1") ]]
}

chpwd() {
  ls
}

dic() {
  grep "$1" $HOME/utils/gene.txt -A 1 -wi --color
}

mkcd() {
  mkdir "$1"
  cd "$1"
}

# Used by other shellscripts only
# gitcommit <commit msg>
gitcommit() {
  if [ "$#" -ne 1 ]; then
    return 1
  fi

  git add .
  git commit -m "$1"
  git push origin master
}

# dotc "commit message"
dotc() {
  if [ "$#" -ne 1 ]; then
    echo "Usage: dotc commit_msg"
    return 1
  fi

  (cd "$HOME"/dotfiles && gitcommit "$1")
}

# gini [--gh repo_name]
# gini does initial commit after initialize current directory
gini() {
  touch README.md

  git init
  git add .
  git commit -m '[ADD] Initial commit'

  if [ "$#" -ge 1 ]; then
    case "$1" in
      "--gh")
        REPO_NAME=${2:-$(basename $(pwd))}
        hub create -p "$REPO_NAME"
        ;;
      *)
        echo 'Usage: dotc commit_msg --gh repo_name'
        return
    esac
  fi
}

gl() {
  dir=$(ghq list | fzf)
  if [[ -n "$dir" ]]; then
    cd "$(ghq root)/$dir"
  fi
}

#
# environment variables
#
export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8
if hascmd nvim; then
  export EDITOR nvim
else
  export EDITOR vim
fi
export FZF_DEFAULT_COMMAND='rg --files --no-ignore --hidden --follow'
export ITUNES_CLI_FUZZY_TOOL='fzf'
export LESS='-m -M -i -R'


#
# History
#

export HISTFILE=~/.zhistory
export HISTSIZE=10000
export SAVEHIST=50000

#
# Bindkey
#

bindkey -e
export WORDCHARS='*?_.[]~-=&;!#$%^(){}<>'

#
# Source
#

if hascmd aws; then
  source /usr/local/bin/aws_zsh_completer.sh
fi

if hascmd kubectl; then
  source <(kubectl completion zsh)
fi

#
# Aliases
#

alias -g A=' | ag'
alias -g F=' | fzf |'
alias -g G=' | grep'
alias -g H=' | head'
alias -g L=' | less'
alias -g T=' | tail'
alias -g W=' | wc'

if hascmd pbcopy; then
  alias -g P=' | pbcopy'
fi

if hascmd nvim; then
  alias vim='nvim'
fi

alias cdg='cd-gitroot'
alias trans='trans -t'

alias g='git'

alias d='docker'
alias dcom='docker-compose'

alias la="ls -a"
alias ll="ls -l"
alias lla="ls -al"

alias l='less'

alias sha1='openssl sha1'

alias rm='rm -rf'
alias cp='cp -r'

alias strace='strace -fi'
alias ltrace='ltrace -fi'

alias tmpcd='tmp ls F cd'
alias tmprm='tmp ls F tmp rm'

alias it='itunes'

alias vimrc='vim ~/.config/nvim/init.vim'
alias zshrc='vim ~/.zshrc'

alias gip='curl inet-ip.info'

if hascmd sshrc; then
  alias ssh='sshrc'
fi

if hascmd mmake; then
  alias make='mmake'
fi

if [ uname = 'Darwin' ]; then
  alias ctags=$(brew --prefix)"/bin/ctags"
fi

#
# fzf
#

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

#
# ssh-agent
#

# eval "$(ssh-agent)"

#
# zplug
#

if [ ! -e $HOME"/.zplug" ]; then
  curl -sL zplug.sh/installer | zsh
fi

source ~/.zplug/init.zsh

# My CLI tools
zplug "lycoris0731/tmp", as:command
zplug "lycoris0731/clip", as:command
export ITUNES_CLI_FUZZY_TOOL='fzf'

# Other CLI tools
zplug "nishanths/license", as:command
zplug "motemen/ghq", as:command
zplug "tj/mmake", as:command

# Plugins
zplug "b4b4r07/enhancd", use:init.sh
export ENHANCD_DISABLE_HOME=0
export ENHANCD_DISABLE_DOT=1
export ENHANCD_DISABLE_HYPHEN=1
zplug "zsh-users/zsh-completions"
zplug "mollifier/cd-gitroot"
zplug "zsh-users/zsh-autosuggestions"
zplug "Tarrasch/zsh-bd"
zplug "hlissner/zsh-autopair", defer:3
zplug "felixr/docker-zsh-completion"

if ! zplug check --verbose; then
    printf "Install? [y/N]: "
    if read -q; then
        echo; zplug install
    fi
fi

zplug load

#
# direnv
#

eval "$(direnv hook zsh)"

source <(salias __init__)

# For profile performance
if hascmd zprof; then
  zprof | less
fi

#
# prompt
#
PROMPT='❯❯❯%(?.%F{green}.%F{red})❯%f '

zstyle ':vcs_info:*' formats '%F{yellow}%b%f'
zstyle ':vcs_info:*' actionformats '%F{yellow}%b%f(%F{red}%a%f)'
precmd() {
  vcs_info
}
RPROMPT='%F{grey}%~%f%f ${vcs_info_msg_0_}'
